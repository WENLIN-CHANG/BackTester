# Pre-commit hooks configuration for BackTester
# Reference: salary_bee project best practices
# Install: pip install pre-commit && pre-commit install

repos:
  # ============================================================
  # Standard checks (from pre-commit-hooks)
  # ============================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
        exclude: ^frontend/tsconfig.*\.json$  # Exclude JSONC files (JSON with comments)
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: check-toml
        name: Check TOML syntax

  # ============================================================
  # Python: Ruff (formatter + linter)
  # ============================================================
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.6
    hooks:
      # Format first (auto-fix)
      - id: ruff-format
        name: Ruff format (auto-fix)
        files: ^backend/.*\.py$

      # Then lint (auto-fix safe rules)
      - id: ruff
        name: Ruff check (auto-fix)
        files: ^backend/.*\.py$
        args: ['--fix', '--exit-non-zero-on-fix']

  # ============================================================
  # Python: Type checking (mypy)
  # ============================================================
  - repo: local
    hooks:
      - id: mypy
        name: Type check with mypy
        entry: bash -c 'cd backend && mypy . --config-file=mypy.ini'
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false
        # Run on whole codebase for accurate type inference

  # ============================================================
  # Python: Security scanning (bandit)
  # ============================================================
  - repo: local
    hooks:
      - id: bandit
        name: Security scan with bandit
        entry: bash -c 'cd backend && bandit -r . --exclude ./tests --severity-level medium --confidence-level medium'
        language: system
        files: ^backend/.*\.py$
        pass_filenames: false

  # ============================================================
  # Python: Fast unit tests (domain layer only)
  # ============================================================
  - repo: local
    hooks:
      - id: pytest-unit
        name: Run unit tests (domain layer)
        entry: bash -c 'cd backend && pytest tests/domain/ -v --tb=short'
        language: system
        files: ^backend/(domain|tests/domain)/.*\.py$
        pass_filenames: false
        # Only run when domain layer code changes

  # ============================================================
  # Frontend: Prettier (formatter)
  # ============================================================
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Format with Prettier
        files: ^frontend/.*\.(ts|tsx|js|jsx|json|css|md)$
        args: ['--write']

  # ============================================================
  # Frontend: ESLint (linter)
  # ============================================================
  - repo: local
    hooks:
      - id: eslint
        name: Lint with ESLint
        entry: bash -c 'cd frontend && npx eslint --fix --max-warnings=0'
        language: system
        files: ^frontend/.*\.(ts|tsx|js|jsx)$
        pass_filenames: true

  # ============================================================
  # Frontend: TypeScript type checking
  # ============================================================
  - repo: local
    hooks:
      - id: tsc
        name: TypeScript type check
        entry: bash -c 'cd frontend && npx tsc --noEmit'
        language: system
        files: ^frontend/.*\.(ts|tsx)$
        pass_filenames: false

# ============================================================
# Global configuration
# ============================================================
default_stages: [pre-commit]
fail_fast: false  # Run all hooks even if one fails
